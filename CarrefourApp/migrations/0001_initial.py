# Generated by Django 5.2 on 2025-10-15 17:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(blank=True, max_length=100)),
                ('telephone', models.CharField(max_length=20, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('points_fidelite', models.IntegerField(default=0)),
                ('niveau_fidelite', models.CharField(choices=[('TOUS', 'Tous'), ('VIP', 'VIP'), ('GOLD', 'Gold'), ('SILVER', 'Silver')], default='TOUS', max_length=20)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('derniere_visite', models.DateTimeField(blank=True, null=True)),
                ('total_achats', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=20, unique=True)),
                ('nom', models.CharField(max_length=200)),
                ('categorie', models.CharField(choices=[('ALIMENTAIRE', 'Alimentaire'), ('BOISSONS', 'Boissons'), ('HYGIENE', 'Hygiène'), ('VETEMENTS', 'Vêtements'), ('ELECTRONIQUE', 'Électronique'), ('MAISON', 'Maison & Jardin')], max_length=50)),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prix_achat', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_actuel', models.IntegerField(default=0)),
                ('stock_critique', models.IntegerField(default=10)),
                ('fournisseur', models.CharField(max_length=200)),
                ('image', models.ImageField(blank=True, null=True, upload_to='produits/')),
                ('code_barre', models.CharField(blank=True, max_length=50)),
                ('statut', models.CharField(choices=[('EN_STOCK', 'En stock'), ('CRITIQUE', 'Stock critique'), ('RUPTURE', 'Rupture')], default='EN_STOCK', max_length=20)),
                ('date_ajout', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('reduction', models.DecimalField(decimal_places=2, max_digits=5)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('est_active', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('produits', models.ManyToManyField(blank=True, related_name='promotions', to='CarrefourApp.produit')),
            ],
            options={
                'verbose_name': 'Promotion',
                'verbose_name_plural': 'Promotions',
            },
        ),
        migrations.CreateModel(
            name='Vente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_transaction', models.CharField(max_length=20, unique=True)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('montant_tva', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('remise', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('montant_final', models.DecimalField(decimal_places=2, max_digits=12)),
                ('moyen_paiement', models.CharField(choices=[('ESPECES', 'Espèces'), ('CARTE', 'Carte bancaire'), ('MOBILE', 'Mobile Money')], max_length=20)),
                ('date_vente', models.DateTimeField(auto_now_add=True)),
                ('caisse_numero', models.CharField(default='#01', max_length=10)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='CarrefourApp.client')),
            ],
            options={
                'verbose_name': 'Vente',
                'verbose_name_plural': 'Ventes',
                'ordering': ['-date_vente'],
            },
        ),
        migrations.CreateModel(
            name='LigneVente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.IntegerField()),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montant_ligne', models.DecimalField(decimal_places=2, max_digits=12)),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='CarrefourApp.produit')),
                ('vente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lignes', to='CarrefourApp.Vente')),
            ],
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('employee_id', models.CharField(blank=True, max_length=20, unique=True)),
                ('role', models.CharField(choices=[('DG', 'Directeur Général'), ('DAF', 'Directeur Administratif et Financier'), ('RH', 'Responsable RH'), ('STOCK', 'Gestionnaire Stock'), ('CAISSIER', 'Caissier'), ('MARKETING', 'Marketing'), ('ANALYSTE', 'Analyste')], default='CAISSIER', max_length=20)),
                ('departement', models.CharField(choices=[('DIRECTION', 'Direction Générale'), ('FINANCE', 'Finance'), ('RH', 'Ressources Humaines'), ('LOGISTIQUE', 'Logistique'), ('VENTES', 'Ventes'), ('MARKETING', 'Marketing'), ('ALIMENTAIRE', 'Alimentaire'), ('HYGIENE', 'Hygiène')], default='VENTES', max_length=50)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='employees/')),
                ('date_embauche', models.DateField(default=django.utils.timezone.now)),
                ('est_actif', models.BooleanField(default=True)),
                ('acces_stocks', models.BooleanField(default=False)),
                ('acces_caisse', models.BooleanField(default=False)),
                ('acces_fidelisation', models.BooleanField(default=False)),
                ('acces_rapports', models.BooleanField(default=False)),
                ('derniere_connexion_custom', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Employé',
                'verbose_name_plural': 'Employés',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='vente',
            name='caissier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ventes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Reclamation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sujet', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('statut', models.CharField(choices=[('EN_COURS', 'En cours'), ('RESOLUE', 'Résolue'), ('FERMEE', 'Fermée')], default='EN_COURS', max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_resolution', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reclamations', to='CarrefourApp.client')),
                ('traite_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Réclamation',
                'verbose_name_plural': 'Réclamations',
            },
        ),
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('nombre_participants', models.IntegerField(default=0)),
                ('est_terminee', models.BooleanField(default=False)),
                ('participants', models.ManyToManyField(blank=True, related_name='formations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
            },
        ),
        migrations.CreateModel(
            name='Conge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_conge', models.CharField(choices=[('ANNUEL', 'Congé annuel'), ('MALADIE', 'Congé maladie'), ('MATERNITE', 'Congé maternité'), ('SANS_SOLDE', 'Congé sans solde')], max_length=20)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('motif', models.TextField()),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('APPROUVE', 'Approuvé'), ('REFUSE', 'Refusé')], default='EN_ATTENTE', max_length=20)),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('approuve_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conges_approuves', to=settings.AUTH_USER_MODEL)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Congé',
                'verbose_name_plural': 'Congés',
            },
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('heure_arrivee', models.TimeField(blank=True, null=True)),
                ('heure_depart', models.TimeField(blank=True, null=True)),
                ('est_present', models.BooleanField(default=False)),
                ('motif_absence', models.CharField(blank=True, max_length=200)),
                ('employe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Présence',
                'verbose_name_plural': 'Présences',
                'unique_together': {('employe', 'date')},
            },
        ),
    ]
