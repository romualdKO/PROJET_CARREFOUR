"""
üöÄ INSTALLATION AUTOMATIQUE APR√àS CLONAGE
Ex√©cute toutes les √©tapes n√©cessaires en une seule commande
"""
import os
import sys
import subprocess

def run_command(command, description):
    """Ex√©cute une commande et affiche le r√©sultat"""
    print(f"\n{'='*70}")
    print(f"üìå {description}")
    print(f"{'='*70}")
    print(f"Commande: {command}\n")
    
    try:
        result = subprocess.run(
            command,
            shell=True,
            check=True,
            capture_output=True,
            text=True
        )
        print(result.stdout)
        if result.stderr:
            print(result.stderr)
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Erreur lors de l'ex√©cution:")
        print(e.stdout)
        print(e.stderr)
        return False

def main():
    print("\n" + "="*70)
    print("üöÄ INSTALLATION AUTOMATIQUE DU PROJET CARREFOUR")
    print("="*70)
    print("\nCe script va configurer automatiquement votre environnement.\n")
    
    # V√©rifier si on est dans le bon dossier
    if not os.path.exists('manage.py'):
        print("‚ùå ERREUR: manage.py non trouv√©!")
        print("Veuillez ex√©cuter ce script depuis le dossier racine du projet.")
        sys.exit(1)
    
    print("‚úÖ Dossier du projet d√©tect√©")
    
    # √âtape 1: Migrations
    print("\n" + "="*70)
    print("√âTAPE 1/3 : Cr√©ation de la base de donn√©es")
    print("="*70)
    
    if not run_command("python manage.py migrate", "Application des migrations"):
        print("\n‚ö†Ô∏è  Les migrations ont √©chou√©. Continuer quand m√™me? (o/n)")
        if input().lower() != 'o':
            sys.exit(1)
    
    # √âtape 2: Cr√©ation des comptes
    print("\n" + "="*70)
    print("√âTAPE 2/3 : Cr√©ation des comptes par d√©faut")
    print("="*70)
    
    if not run_command("python setup_after_clone.py", "Cr√©ation des comptes"):
        print("\n‚ùå La cr√©ation des comptes a √©chou√©!")
        sys.exit(1)
    
    # √âtape 3: Test des connexions
    print("\n" + "="*70)
    print("√âTAPE 3/3 : Test des connexions")
    print("="*70)
    
    run_command("python test_connexion.py", "V√©rification des comptes")
    
    # R√©sum√© final
    print("\n" + "="*70)
    print("‚úÖ INSTALLATION TERMIN√âE AVEC SUCC√àS!")
    print("="*70)
    print("\nüìã Prochaines √©tapes:\n")
    print("1Ô∏è‚É£  Lancer le serveur:")
    print("   python manage.py runserver\n")
    print("2Ô∏è‚É£  Acc√©der √† l'application:")
    print("   http://127.0.0.1:8000/login/\n")
    print("3Ô∏è‚É£  Se connecter avec un compte:")
    print("   ‚Ä¢ DG       : dg / DG2025@Admin")
    print("   ‚Ä¢ DAF      : daf / DAF2025@Admin")
    print("   ‚Ä¢ RH       : rh / RH2025@Admin")
    print("   ‚Ä¢ Stock    : stock / Stock2025")
    print("   ‚Ä¢ Caissier : caissier / Caissier2025")
    print("   ‚Ä¢ Marketing: marketing / Marketing2025")
    print("\n" + "="*70 + "\n")

if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚ùå Installation annul√©e par l'utilisateur.")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå ERREUR INATTENDUE: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)
